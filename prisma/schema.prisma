generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  email    String @unique
  username String @unique
  password String

  blocked Boolean @default(false)

  role String @default("USER")

  avatar      String?
  socialMedia String?
  city        String?
  country     String?
  dateOfBirth DateTime?
  bio         String?

  followings Follow[] @relation(name: "followings")
  followers  Follow[] @relation(name: "followers")

  addedMarkers     Marker[] @relation(name: "addedMarkers")
  favoritesMarkers Marker[] @relation(name: "favoritesMarkers")

  markersReports MarkerReport[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Marker {
  id String @id @default(cuid())

  address String

  lat Float
  lng Float

  confirmed Boolean @default(false)

  images String

  addedByUserId String
  addedBy       User   @relation(name: "addedMarkers", fields: [addedByUserId], references: [id])

  favorites User[] @relation(name: "favoritesMarkers")

  reports MarkerReport[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarkerReport {
  id Int @id @default(autoincrement())

  markerId String
  marker   Marker @relation(fields: [markerId], references: [id])

  reportedByUserId String
  reportedBy       User   @relation(fields: [reportedByUserId], references: [id])

  type    String
  message String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id Int @id @default(autoincrement())

  whoFollowUserId  String
  whoFollowUser    User   @relation(name: "followings", fields: [whoFollowUserId], references: [id])
  whomFollowUserId String
  whomFollowUser   User   @relation(name: "followers", fields: [whomFollowUserId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
